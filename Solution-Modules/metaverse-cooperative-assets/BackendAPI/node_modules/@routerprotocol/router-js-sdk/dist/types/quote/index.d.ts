export interface Quote {
    source: {
        asset: {
            decimals: number;
            symbol: string;
            name: string;
            chainId: number;
            address: string;
            resourceID: string;
            isMintable: boolean;
            isWrappedAsset: boolean;
            tokenInstance: {
                decimals: number;
                symbol: string;
                name: string;
                chainId: number;
                address: string;
            };
        };
        stableReserveAsset: {
            decimals: number;
            symbol: string;
            name: string;
            chainId: number;
            address: string;
            resourceID: string;
            isMintable: boolean;
            isWrappedAsset: boolean;
        };
        tokenAmount: string;
        stableReserveAmount: string;
        path: any[];
        flags: string[];
        priceImpact: string;
        bridgeFee: number;
        tokenPath: string;
    };
    destination: {
        asset: {
            decimals: number;
            symbolstring: string;
            name: string;
            chainId: number;
            address: string;
            resourceID: string;
            isMintable: boolean;
            isWrappedAsset: boolean;
            tokenInstance: {
                decimals: number;
                symbolstring: string;
                name: string;
                chainId: number;
                address: string;
            };
        };
        stableReserveAsset: {
            decimals: number;
            symbol: string;
            name: string;
            chainId: number;
            address: string;
            resourceID: string;
            isMintable: boolean;
            isWrappedAsset: boolean;
        };
        tokenAmount: string;
        stableReserveAmount: string;
        priceImpact: string;
        tokenPath: string;
    };
    txn: {
        feeToken: string;
        execution: {
            from: string;
            to: string;
            data: string;
        };
    };
}
